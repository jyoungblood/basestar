---
import { isAuthenticated, getUserEmail } from "../utils/auth.server";

// Get props and set up auth state
const { title } = Astro.props;
const authenticated = isAuthenticated(Astro.cookies);
// Replace the cookie-based email with the Supabase user email
const userEmail = authenticated ? await getUserEmail(Astro.cookies) : null;

// Add this line to get the current path
const currentPath = Astro.url.pathname;

// Get site title from environment variable
const siteTitle = import.meta.env.SITE_TITLE;

// Construct the full page title
const pageTitle = title ? `${title} | ${siteTitle}` : siteTitle;

// Make authenticated state available to all pages using this layout
Astro.props.authenticated = authenticated;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{pageTitle}</title>
  </head>
  <body>
    <div class="parent h-screen flex flex-col max-w-7xl mx-auto">
      <header>
        <nav class="flex justify-between items-center p-4 h-16">
          <div class="flex items-center">
            <a class="text-3xl font-semibold mr-4" href="/">
              <svg
                stroke="currentColor"
                fill="currentColor"
                stroke-width="0"
                class="w-6 h-6 hover:scale-90"
                viewBox="0 0 24 24"
                xmlns="http://www.w3.org/2000/svg"
                ><path
                  d="M12.5 1.25a.75.75 0 0 0-1.5 0v8.69L6.447 5.385a.75.75 0 1 0-1.061 1.06L9.94 11H1.25a.75.75 0 0 0 0 1.5h8.69l-4.554 4.553a.75.75 0 0 0 1.06 1.061L11 13.561v8.689a.75.75 0 0 0 1.5 0v-8.69l4.553 4.554a.75.75 0 0 0 1.061-1.06L13.561 12.5h8.689a.75.75 0 0 0 0-1.5h-8.69l4.554-4.553a.75.75 0 1 0-1.06-1.061L12.5 9.939V1.25Z"
                ></path></svg
              >
            </a>
          </div>
          <div class="text-xs">
            {
              authenticated ? (
                <>
                  <span class="">{userEmail}</span>
                  <span class="opacity-50 mx-2">|</span>
                  <a
                    class="text-xs no-underline hover:underline"
                    href="/api/auth/logout"
                  >
                    Log out
                  </a>
                </>
              ) : (
                <>
                  <a
                    class={`text-xs hover:underline ${currentPath === "/login" ? "underline" : "no-underline"}`}
                    href="/login"
                  >
                    Log In
                  </a>
                  <span class="opacity-50 mx-2">|</span>
                  <a
                    class={`text-xs hover:underline ${currentPath === "/register" ? "underline" : "no-underline"}`}
                    href="/register"
                  >
                    Register
                  </a>
                </>
              )
            }
          </div>
        </nav>
      </header>
      <main class="flex-1 flex p-3">
        <slot />
      </main>
      <footer class="flex justify-between text-xs text-right p-3">
        <div class="">
          &copy; {new Date().getFullYear()}
          {siteTitle}
        </div>
        <div class="">All rights reserved</div>
      </footer>
    </div>
  </body>
</html>

<style>
  html,
  body {
    margin: 0;
    width: 100%;
    height: 100%;
  }
</style>
