---
import Layout from "../../layouts/Layout.astro";
import { createClient } from "../../lib/supabase";

const supabase = createClient.astro(Astro);

const { url } = Astro;

const token_hash = url.searchParams.get("token_hash");
let error = url.searchParams.get("error");

// Early return if no token
if (!token_hash) {
  return Astro.redirect('/auth/forgot-password?error=Invalid or expired reset link');
}

// Verify token
const { error: verificationError } = await supabase.auth.verifyOtp({
  token_hash,
  type: "recovery",
});

// Return if verification failed
if (verificationError) {
  return Astro.redirect(
    `/auth/forgot-password?error=${encodeURIComponent(verificationError.message)}`
  );
}
---

<Layout title="Reset Password">
  <div class="flex flex-col items-center justify-center flex-1 p-4">
    <div id="forgotPasswordContainer" class="w-full max-w-sm">
      {
        error && (
          <div class="mb-6 p-4 bg-red-100 border border-red-300 text-red-700 rounded-md text-center w-full max-w-sm">
            <p class="font-semibold">{decodeURIComponent(error)}</p>
          </div>
        )
      }
      <h1 class="text-2xl font-bold mb-2 text-center">Reset Password</h1>
      <p class="mb-6 text-sm text-center">Enter your new password:</p>
      <form class="border border-gray-200 p-8 rounded-md mb-4" id="loginForm">
        <div class="flex flex-col mb-4">
          <label for="password" class="mb-2 text-sm font-semibold"
            >Password</label
          >
          <input
            type="password"
            name="password"
            id="password"
            required
            class="p-2 border border-gray-400 rounded-md mb-4"
          />
        </div>
        <button
          type="submit"
          id="submitButton"
          class="bg-black text-white p-3 text-sm font-semibold rounded-md hover:bg-gray-800 cursor-pointer w-full disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center"
        >
          <span id="buttonText">Reset Password</span>
          <svg
            id="loadingSpinner"
            class="hidden w-5 h-5 ml-2 animate-spin"
            viewBox="0 0 24 24"
          >
            <circle
              class="opacity-25"
              cx="12"
              cy="12"
              r="10"
              stroke="currentColor"
              stroke-width="4"
              fill="none"></circle>
            <path
              class="opacity-75"
              fill="currentColor"
              d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
            ></path>
          </svg>
        </button>
      </form>
    </div>

    <div id="confirmationContainer" class="hidden w-full max-w-sm">
      <div class="border border-gray-200 p-8 rounded-md">
        <h1 class="text-xl font-bold mb-2">Check your email</h1>
        <p class="text-sm">
          We've sent a password reset link to your email address. Please check
          your inbox and click the link to reset your password.
        </p>
      </div>
    </div>
  </div>
</Layout>

<script>
  const form = document.getElementById("loginForm");
  const submitButton = document.getElementById("submitButton");
  const buttonText = document.getElementById("buttonText");
  const loadingSpinner = document.getElementById("loadingSpinner");
  const forgotPasswordContainer = document.getElementById(
    "forgotPasswordContainer"
  );
  const confirmationContainer = document.getElementById(
    "confirmationContainer"
  );

  form.addEventListener("submit", function (event) {
    event.preventDefault();

    submitButton.disabled = true;
    buttonText.textContent = "Resetting password...";
    loadingSpinner.classList.remove("hidden");

    const formData = new FormData(event.target);
    const password = formData.get("password");

    // Get token from URL
    const urlParams = new URLSearchParams(window.location.search);
    const token_hash = urlParams.get("token_hash");

    formData.append("token_hash", token_hash);

    fetch("/api/auth/reset-password", {
      method: "POST",
      body: formData,
    })
      .then((response) => response.json())
      .then((data) => {
        if (!data.success) {
          throw new Error(data.error);
        }
        // Redirect to login page with success message
        window.location.href = `/login?success=${encodeURIComponent("Password reset successfully")}`;
      })
      .catch((error) => {
        console.error("Error:", error);
        window.location.href = `/auth/reset-password?error=${encodeURIComponent(error.message || "An unexpected error occurred")}`;
      });
  });
</script>
